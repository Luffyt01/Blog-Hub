version: "3.8"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.8
    container_name: kafka
    hostname: kafka  # Explicit hostname
    volumes:
      - kafka-data:/bitnami
    networks:
      - blog-hub-network
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes  # Important for development
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 10s
      timeout: 5s
      retries: 10

  kafbat-ui:
    container_name: kafbat-ui
    image: ghcr.io/kafbat/kafka-ui:latest
    ports:
      - "8090:8090"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_KSQLDBSERVER: http://ksqldb0:8088

  discovery-server:
    image: luffy010/blog-hub/discovery-server
    container_name: discovery-server
    networks:
      - blog-hub-network
    ports:
      - "8761:8761"

  connections-db:
    image: neo4j
    container_name: connections-db
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - connections-db-data:/data
    networks:
      - blog-hub-network

  notification-db:
    image: postgres
    container_name: notification-db
    environment:
      - POSTGRES_DB=notificationDB
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - notification-db-data:/var/lib/postgresql/data
    networks:
      - blog-hub-network

  post-db:
    image: postgres
    container_name: post-db
    environment:
      - POSTGRES_DB=postdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - post-db-data:/var/lib/postgresql/data
    networks:
      - blog-hub-network

  user-db:
    image: postgres
    container_name: user-db
    environment:
      - POSTGRES_DB=userdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - user-db-data:/var/lib/postgresql/data
    networks:
      - blog-hub-network

  notification-service:
    image: luffy010/blog-hub/notification-service
    container_name: notification-service
    networks:
      - blog-hub-network
    depends_on:
      - notification-db
      - discovery-server
      - kafka

  post-service:
    image: luffy010/blog-hub/post-service
    container_name: post-service
    networks:
      - blog-hub-network
    depends_on:
      - post-db
      - discovery-server
      - kafka

  user-service:
    image: luffy010/blog-hub/user-service
    container_name: user-service
    networks:
      - blog-hub-network
    depends_on:
      - user-db
      - discovery-server
      - kafka

  connections-service:
    image: luffy010/blog-hub/connections-service
    container_name: connections-service
    networks:
      - blog-hub-network
    depends_on:
      - connections-db
      - discovery-server
      - kafka

  api-gateway:
    image: luffy010/blog-hub/api-gateway
    container_name: api-gateway
    networks:
      - blog-hub-network
    depends_on:
      - discovery-server


volumes:
  kafka-data:
  notification-db-data:
  post-db-data:
  user-db-data:
  connections-db-data:

networks:
  blog-hub-network:
